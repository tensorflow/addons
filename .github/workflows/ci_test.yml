name: GitHub CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  BAZEL_VERSION: 1.1.0

jobs:
  linux-test:
    name: Ubuntu CPU Python3
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: CI test Ubuntu CPU
        run: |
          set -x -e
          bash tools/run_docker.sh -d cpu -c 'make unit-test'
  macos-test:
    name: MacOS CPU Python3
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.5']
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: CI test macOS py${{ matrix.python-version }}
        run: |
          python --version
          bash tools/ci_testing/install_bazel_macos.sh $BAZEL_VERSION
          bash -x -e tools/ci_testing/addons_cpu.sh
  windows-test:
    name: Windows CPU Python3
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.5']
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: CI test windows py${{ matrix.python-version }}
        env:
          BAZEL_VC: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/"
        shell: bash
        run: |
            python -m pip install wheel setuptools
            curl -sSOL https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-windows-x86_64.exe
            export BAZEL_PATH=/d/a/addons/addons/bazel-${BAZEL_VERSION}-windows-x86_64.exe
            bash -x -e ./tools/ci_testing/addons_cpu.sh
  flake8-test:
    name: Flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8
  black-test:
    name: Black Python code format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: install black
        run: pip install black
      - name: Ensure contributor used ("black ./") before commit
        run: black --check ./
  public-api-typed:
    name: Check that the public API is typed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.5'
      - name: install tensorflow and typeguard
        run: pip install tensorflow-cpu typeguard
      - name: install tf addons
        run: TF_ADDONS_NO_BUILD=1 pip install --no-deps -e .
      - name: Run type check
        run: python tools/ci_build/verify/check_typing_info.py
  case-insensitive-filesystem:
    name: Verify python filenames work on case insensitive FS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.5'
      - name: Run filename check
        run: python tools/ci_build/verify/check_file_name.py
  valid_build_files:
    name: Valid build files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup Bazel
        uses: abhinavsingh/setup-bazel@v3
        with:
          version: $BAZEL_VERSION
      - uses: actions/setup-python@v1
        with:
          python-version: '3.5'
      - name: Setup the environement
        run: |
          pip install tensorflow-cpu
          python3 ./configure.py --no-deps
      - name: Check the validity of build files
        run: bazel build --nobuild -- //tensorflow_addons/...
  clang-format:
    name: Clang C++ code format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      # TODO: use DoozyX/clang-format-lint-action when
      # https://github.com/DoozyX/clang-format-lint-action/pull/5 is merged
      # and the new version is out
      - uses: gabrieldemarmiesse/clang-format-lint-action@1044fee
        with:
          clangFormatVersion: 9
          cliArgs: --style=google
  check-bazel-format:
    name: Bazel code format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: install buildifier
        run: sudo bash tools/ci_build/install/buildifier.sh
      - name: Ensure contributor used "buildifier -r ./" before commit
        run: buildifier -mode=check -r ./
  local-dev-tools:
    name: Check that local dev tools work
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Checking the sanity check
        run: bash tools/run_sanity_check.sh
