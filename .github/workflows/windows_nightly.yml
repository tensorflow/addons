name: windows-nightly

on:
  schedule:
    - cron:  '0 0 * * *'

env:
  BAZEL_VERSION: 1.1.0

jobs:
  windows-cpu-nightly-test:
    name: Test nightly on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Nightly test Windows py${{ matrix.python-version }}
        env:
          BAZEL_VC: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/"
        shell: bash
        run: |
          python -m pip install wheel setuptools
          curl -sSOL https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-windows-x86_64.exe
          export BAZEL_PATH=/d/a/addons/addons/bazel-${BAZEL_VERSION}-windows-x86_64.exe
          bash -x -e ./tools/ci_testing/addons_cpu.sh

  windows-nightly-wheel:
    name: Build nightly wheels for Windows
    needs: [windows-cpu-nightly-test]
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build Windows wheels
        env:
          TF_NEED_CUDA: 0
          BAZEL_VC: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/"
        shell: bash
        run: |
          python -m pip install wheel setuptools
          python ./configure.py --quiet

          curl -sSOL https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-windows-x86_64.exe
          ./bazel-${BAZEL_VERSION}-windows-x86_64.exe build \
            -c opt \
            --enable_runfiles \
            --noshow_progress \
            --noshow_loading_progress \
            --verbose_failures \
            --test_output=errors \
            build_pip_pkg
          bazel-bin/build_pip_pkg artifacts --nightly
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ runner.os }}-wheels
          path: artifacts

  upload-wheels:
    name: Publish wheels to PyPi
    needs: [windows-nightly-wheel]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: Windows-wheels
          path: Windows-wheels
      - run: |
          set -e -x
          mkdir -p dist
          cp Windows-wheels/*.whl dist/
          ls -la dist/
          sha256sum dist/*.whl
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
