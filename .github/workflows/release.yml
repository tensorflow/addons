name: addons-release

on:
  release:
    types: [published]
    tags:
      - v*
  push:
    branches:
      - master
      - r*
  pull_request:
    branches:
      - master
      - r*

env:
  BAZEL_VERSION: '1.1.0'
  MIN_PY_VERSION: '3.5'
  MAX_PY_VERSION: '3.8'

jobs:
  test-with-bazel:
    name: Test with bazel
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ env.MIN_PY_VERSION }}
      - name: Build wheels
        run: |
          pip install --default-timeout=1000 -r tools/install_deps/pytest.txt -r tools/install_deps/tensorflow-cpu.txt -r requirements.txt
          bash tools/install_deps/bazel_linux.sh
          python configure.py
          bazel test -c opt -k --test_timeout 300,450,1200,3600 --test_output=errors //tensorflow_addons/...
  release-wheel:
    name: Build release wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['macos-latest', 'windows-latest', 'ubuntu-18.04']
        py-version: ['3.5', '3.6', '3.7', '3.8']
        tf-version: ['2.2.0', '2.3.0rc0']
      fail-fast: false
    steps:
      - uses: actions/github-script@0.3.0
        id: author-date
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
            return commit_details.data.author.date
      - if: github.event_name == 'push'
        run: echo "::set-env name=NIGHTLY_FLAG::--nightly"
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.py-version }}
      - name: Setup Bazel
        # Ubuntu bazel is run inside of the docker image
        if: matrix.os != 'ubuntu-18.04'
        # MacOS VMs share IP addr on GH actions. This bazel installation authenticates token to prevent api rate limiting.
        uses: jwlawson/actions-setup-bazel@784af34 # Version 1.1
        with:
          bazel-version: ${{ env.BAZEL_VERSION}}
          github-api-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build wheels
        env:
          OS: ${{ runner.os }}
          PY_VERSION: ${{ matrix.py-version }}
          TF_VERSION: ${{ matrix.tf-version }}
          NIGHTLY_TIME: ${{ steps.author-date.outputs.result }}
        shell: bash
        run: bash .github/workflows/make_wheel_${OS}.sh
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ runner.os }}-${{ matrix.py-version }}-tf${{ matrix.tf-version }}-wheel
          path: wheelhouse
  upload-wheels:
    name: Publish wheels to PyPi
    needs: [release-wheel, test-with-bazel]
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        os: ['macOS', 'Windows', 'Linux']
        py-version: ['3.5', '3.6', '3.7', '3.8']
        tf-version: ['2.2.0']
      fail-fast: false
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: ${{ matrix.os }}-${{ matrix.py-version }}-tf${{ matrix.tf-version }}-wheel
          path: ./dist
      - run: |
          set -e -x
          ls -la dist/
          sha256sum dist/*.whl
      - uses: pypa/gh-action-pypi-publish@v1.1.0
        if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || github.event_name == 'release'
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
