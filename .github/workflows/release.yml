name: addons-release

on:
  release:
    tags:
      - v*

env:
  BAZEL_VERSION: 1.1.0

jobs:
  ubuntu-cpu:
    name: Test on Ubuntu
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Test Ubuntu CPU
        run: |
          set -x -e
          bash tools/run_docker.sh -d cpu -c 'make unit-test'

  macos-cpu:
    name: Test on macOS
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7']
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: CPU test macOS py${{ matrix.python-version }}
        run: |
          python -m pip install wheel setuptools
          python --version
          bash tools/ci_testing/install_bazel_macos.sh $BAZEL_VERSION
          bash -x -e tools/ci_testing/addons_cpu.sh

  windows-cpu:
    name: Test on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7']
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: CPU test Windows py${{ matrix.python-version }}
        shell: bash
        run: |
          python -m pip install wheel setuptools
          curl -sSOL https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-windows-x86_64.exe
          export BAZEL_VC=/c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2019/Enterprise/VC/
          export BAZEL_PATH=/d/a/addons/addons/bazel-${BAZEL_VERSION}-windows-x86_64.exe
          export PATH=/c/hostedtoolcache/windows/Python/${{ matrix.python-version }}/x64/:$PATH
          bash -x -e ./tools/ci_testing/addons_cpu.sh

  manylinux-release:
    name: Build and release for manylinux2010
    needs: [ubuntu-cpu]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Build and release for macOS
        run: |
          docker run -e TF_NEED_CUDA=1 -v ${PWD}:/addons -w /addons gcr.io/tensorflow-testing/nosla-cuda10.1-cudnn7-ubuntu16.04-manylinux2010 tools/ci_build/builds/release_linux.sh
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: wheelhouse/

  macos-release:
    name: Build and release for macOS
    needs: [macos-cpu]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Build and release for macOS
        run: |
          bash -x -e tools/ci_build/builds/release_macos.sh
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: wheelhouse/


  windows-release:
    name: Build and release for Windows
    needs: [windows-cpu]
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7']
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build and release for Windows
        shell: bash
        run: |
          python -m pip install wheel setuptools
          curl -sSOL https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-windows-x86_64.exe
          export BAZEL_VC=/c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2019/Enterprise/VC/
          export BAZEL_PATH=/d/a/addons/addons/bazel-${BAZEL_VERSION}-windows-x86_64.exe
          export PATH=/c/hostedtoolcache/windows/Python/${{ matrix.python-version }}/x64/:$PATH
          bash -x -e tools/ci_build/builds/release_windows.sh
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: artifacts/
