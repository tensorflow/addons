dist: xenial
language: minimal

git:
  quiet: true

services:
- docker

stages:
- test
- build

jobs:
  include:
    # Linux Tests
    - stage: test
      name: "Test on Ubuntu 16.04"
      script:
      - bash -x -e tools/run_docker.sh -c 'make unit-test'

    # Linux Builds
    - stage: build
      name: "Build on Ubuntu 16.04 for Python 2.7 3.5 3.6 3.7"
      script:
      # Build GPU kernels without runtime=nvidia as there are no GPUs/Drivers
      - docker run -e TF_NEED_CUDA=1 -v ${PWD}:/addons -w /addons gcr.io/tensorflow-testing/nosla-cuda10.1-cudnn7-ubuntu16.04-manylinux2010 tools/ci_build/builds/release_linux.sh
      after_success:
        - python -m pip install -q -U twine --ignore-installed six
        - twine upload -u $PYPI_USER -p $PYPI_PW wheelhouse/*.whl

    # MacOS Builds
    - stage: build
      name: "Build on MacOS for Python 2.7 3.5 3.6 3.7"
      os: osx
      osx_image: xcode10
      script:
        - bash -x -e tools/ci_build/builds/release_macos.sh
      after_success:
        - python -m pip install -q -U twine --ignore-installed six
        - twine upload -u $PYPI_USER -p $PYPI_PW wheelhouse/*.whl

# Windows nightlies for TensorFlow are not available
    # Windows Builds
#    - stage: build
#      name: "Build on Windows for Python 2.7 3.5 3.6 3.7"
#      os: windows
#      language: shell
#      before_install:
#        - choco install python --version 2.7.11
#        - choco install python --version 3.5.4
#        - choco install python --version 3.6.8
#        - choco install python --version 3.7.5
#      script:
#        - export PATH=/c/tools/python:/c/tools/python/Scripts:$PATH
#        - bash -x -e tools/ci_build/builds/release_windows.sh
#        - export PATH=/c/Python35:/c/Python35/Scripts:$PATH
#        - bash -x -e tools/ci_build/builds/release_windows.sh
#        - export PATH=/c/Python36:/c/Python36/Scripts:$PATH
#        - bash -x -e tools/ci_build/builds/release_windows.sh
#        - export PATH=/c/Python37:/c/Python37/Scripts:$PATH
#        - bash -x -e tools/ci_build/builds/release_windows.sh
#      after_success:
#        - python -m pip install -q -U twine --ignore-installed six
#        - twine upload -u $PYPI_USER -p $PYPI_PW artifacts/*.whl

notifications:
  email:
    recipients:
      - addons-testing@tensorflow.org
    on_success: never
    on_failure: always
